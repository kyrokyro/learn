import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Image from 'next/image'


import { api } from "~/utils/api";

import GridLayout from "react-grid-layout";


const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col h-full bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container px-4 py-16">

          <div className="">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading Tent..."}
            </p>
            <AuthShowcase />
          </div>

          <GridLayout className="" cols={2} rowHeight={256} width={640}>

          <div key="a" className="group flex flex-col h-full bg-neutral-900 border  shadow-sm rounded-xl border-gray-700 shadow-slate-700/[.7]" data-grid={{ x: 0, y: 0, w: 1, h: 1, minW: 1, maxW: 2, minH: 1, maxH: 2 }}>
              <div className="flex flex-col h-full justify-center items-center rounded-t-xl"style={{backgroundImage: `url("/img/1.jpg")`,height: '100vh',backgroundRepeat:'no-repeat',backgroundSize: 'cover'}}>
              </div>
              <div className="p-4">
                <span className="block mb-1 text-xs font-semibold uppercase text-blue-600">
                  google.com
                </span>
                <p className="mt-3 text-neutral-100">
                  Sample page title
                </p>
              </div>
            </div>
            <div key="b" className="group flex flex-col h-full bg-neutral-900 border  shadow-sm rounded-xl border-gray-700 shadow-slate-700/[.7]" data-grid={{ x: 0, y: 1, w: 1, h: 1, minW: 1, maxW: 2, minH: 1, maxH: 2 }}>
              <div className="flex flex-col h-full justify-center items-center rounded-t-xl"style={{backgroundImage: `url("/img/2.jpg")`,height: '100vh',backgroundRepeat:'no-repeat',backgroundSize: 'cover'}}>
              </div>
              <div className="p-4">
                <span className="block mb-1 text-xs font-semibold uppercase text-blue-600">
                  google.com
                </span>
                <p className="mt-3 text-neutral-100">
                  Sample page title
                </p>
              </div>
            </div>
            <div key="c" className="group flex flex-col h-full bg-neutral-900 border  shadow-sm rounded-xl border-gray-700 shadow-slate-700/[.7]" data-grid={{ x: 1, y: 1, w: 1, h: 1, minW: 1, maxW: 2, minH: 1, maxH: 2 }}>
              <div className="flex flex-col h-full justify-center items-center rounded-t-xl"style={{backgroundImage: `url("/img/3.jpg")`,height: '100vh',backgroundRepeat:'no-repeat',backgroundSize: 'cover'}}>
              </div>
              <div className="p-4">
                <span className="block mb-1 text-xs font-semibold uppercase text-blue-600">
                  google.com
                </span>
                <p className="mt-3 text-neutral-100">
                  Sample page title
                </p>
              </div>
            </div>
            
            <div key="d" className="group flex flex-col h-full bg-neutral-900 border  shadow-sm rounded-xl border-gray-700 shadow-slate-700/[.7]" data-grid={{ x: 1, y: 1, w: 1, h: 1, minW: 1, maxW: 2, minH: 1, maxH: 2 }}>
              <div className="flex flex-col h-full justify-center items-center rounded-t-xl"style={{backgroundImage: `url("/img/4.jpg")`,height: '100vh',backgroundRepeat:'no-repeat',backgroundSize: 'cover'}}>
              </div>
              <div className="p-4">
                <span className="block mb-1 text-xs font-semibold uppercase text-blue-600">
                  google.com
                </span>
                <p className="mt-3 text-neutral-100">
                  Sample page title
                </p>
              </div>
            </div>
          </GridLayout>

        </div>


      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
